{"ast":null,"code":"import _asyncToGenerator from \"D:/freelancer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProfileService = /*#__PURE__*/(() => {\n  class ProfileService {\n    constructor(http) {\n      this.http = http;\n      this.API_BASE_URL = 'https://www.askyacham.com/api/profile';\n    }\n    // Get user profile\n    getProfile() {\n      return _asyncToGenerator(function* () {\n        // In production, this would make an HTTP GET request\n        // For now, return mock data\n        return new Promise(resolve => {\n          setTimeout(() => {\n            resolve({\n              id: '1',\n              fullName: 'John Doe',\n              email: 'john.doe@example.com',\n              phone: '+1 (555) 123-4567',\n              location: 'San Francisco, CA',\n              linkedin: 'https://linkedin.com/in/johndoe',\n              summary: 'Experienced software engineer with 5+ years in web development. Passionate about creating scalable applications and leading development teams.',\n              skills: ['JavaScript', 'TypeScript', 'Angular', 'React', 'Node.js', 'Python', 'AWS'],\n              experience: [{\n                id: '1',\n                title: 'Senior Software Engineer',\n                company: 'Tech Corp',\n                startDate: '2020-01',\n                endDate: 'Present',\n                description: 'Leading development of web applications and mentoring junior developers.'\n              }, {\n                id: '2',\n                title: 'Software Engineer',\n                company: 'StartupXYZ',\n                startDate: '2018-06',\n                endDate: '2019-12',\n                description: 'Developed full-stack web applications using modern technologies.'\n              }],\n              education: [{\n                id: '1',\n                degree: 'Bachelor of Computer Science',\n                institution: 'University of Technology',\n                graduationYear: '2018'\n              }],\n              created_at: '2023-01-01T00:00:00Z',\n              updated_at: '2023-12-01T00:00:00Z'\n            });\n          }, 500);\n        });\n      })();\n    }\n    // Update user profile\n    updateProfile(profileData) {\n      return _asyncToGenerator(function* () {\n        // In production, this would make an HTTP PUT request\n        // For now, simulate successful update\n        return new Promise(resolve => {\n          setTimeout(() => {\n            console.log('Profile updated:', profileData);\n            resolve({\n              id: '1',\n              fullName: profileData.fullName || 'John Doe',\n              email: profileData.email || 'john.doe@example.com',\n              phone: profileData.phone,\n              location: profileData.location,\n              linkedin: profileData.linkedin,\n              summary: profileData.summary,\n              skills: profileData.skills || [],\n              experience: profileData.experience || [],\n              education: profileData.education || [],\n              created_at: '2023-01-01T00:00:00Z',\n              updated_at: new Date().toISOString()\n            });\n          }, 1000);\n        });\n      })();\n    }\n    // Upload profile picture\n    uploadProfilePicture(file) {\n      return _asyncToGenerator(function* () {\n        // In production, this would make an HTTP POST request with FormData\n        // For now, simulate successful upload\n        return new Promise(resolve => {\n          setTimeout(() => {\n            console.log('Profile picture uploaded:', file.name);\n            resolve('https://example.com/profile-pictures/user-1.jpg');\n          }, 2000);\n        });\n      })();\n    }\n    // Add work experience\n    addWorkExperience(experience) {\n      return _asyncToGenerator(function* () {\n        // In production, this would make an HTTP POST request\n        // For now, simulate successful addition\n        return new Promise(resolve => {\n          setTimeout(() => {\n            const newExperience = {\n              ...experience,\n              id: Date.now().toString()\n            };\n            console.log('Work experience added:', newExperience);\n            resolve(newExperience);\n          }, 500);\n        });\n      })();\n    }\n    // Update work experience\n    updateWorkExperience(id, experience) {\n      return _asyncToGenerator(function* () {\n        // In production, this would make an HTTP PUT request\n        // For now, simulate successful update\n        return new Promise(resolve => {\n          setTimeout(() => {\n            const updatedExperience = {\n              ...experience,\n              id\n            };\n            console.log('Work experience updated:', updatedExperience);\n            resolve(updatedExperience);\n          }, 500);\n        });\n      })();\n    }\n    // Delete work experience\n    deleteWorkExperience(id) {\n      return _asyncToGenerator(function* () {\n        // In production, this would make an HTTP DELETE request\n        // For now, simulate successful deletion\n        return new Promise(resolve => {\n          setTimeout(() => {\n            console.log('Work experience deleted:', id);\n            resolve(true);\n          }, 300);\n        });\n      })();\n    }\n    // Add education\n    addEducation(education) {\n      return _asyncToGenerator(function* () {\n        // In production, this would make an HTTP POST request\n        // For now, simulate successful addition\n        return new Promise(resolve => {\n          setTimeout(() => {\n            const newEducation = {\n              ...education,\n              id: Date.now().toString()\n            };\n            console.log('Education added:', newEducation);\n            resolve(newEducation);\n          }, 500);\n        });\n      })();\n    }\n    // Update education\n    updateEducation(id, education) {\n      return _asyncToGenerator(function* () {\n        // In production, this would make an HTTP PUT request\n        // For now, simulate successful update\n        return new Promise(resolve => {\n          setTimeout(() => {\n            const updatedEducation = {\n              ...education,\n              id\n            };\n            console.log('Education updated:', updatedEducation);\n            resolve(updatedEducation);\n          }, 500);\n        });\n      })();\n    }\n    // Delete education\n    deleteEducation(id) {\n      return _asyncToGenerator(function* () {\n        // In production, this would make an HTTP DELETE request\n        // For now, simulate successful deletion\n        return new Promise(resolve => {\n          setTimeout(() => {\n            console.log('Education deleted:', id);\n            resolve(true);\n          }, 300);\n        });\n      })();\n    }\n    // Get profile completeness score\n    getProfileCompleteness() {\n      return _asyncToGenerator(function* () {\n        // In production, this would calculate based on profile data\n        // For now, return a mock score\n        return new Promise(resolve => {\n          setTimeout(() => {\n            resolve(85); // 85% complete\n          }, 200);\n        });\n      })();\n    }\n    // Get profile suggestions\n    getProfileSuggestions() {\n      return _asyncToGenerator(function* () {\n        // In production, this would provide AI-powered suggestions\n        // For now, return mock suggestions\n        return new Promise(resolve => {\n          setTimeout(() => {\n            resolve(['Add more skills to your profile', 'Include a professional summary', 'Add your LinkedIn profile', 'Upload a professional photo']);\n          }, 300);\n        });\n      })();\n    }\n    static {\n      this.ɵfac = function ProfileService_Factory(t) {\n        return new (t || ProfileService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ProfileService,\n        factory: ProfileService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ProfileService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}