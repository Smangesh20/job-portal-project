{"ast":null,"code":"import _asyncToGenerator from \"D:/freelancer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/auth.service\";\nimport * as i4 from \"../services/email-auth.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/progress-spinner\";\nfunction OtpVerificationComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Verification code is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction OtpVerificationComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid 6-digit code \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction OtpVerificationComponent_mat_spinner_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 18);\n  }\n}\nfunction OtpVerificationComponent_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.action === \"signup\" ? \"Create account\" : \"Sign in\", \" \");\n  }\n}\nfunction OtpVerificationComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" Resend code in \", ctx_r0.resendCooldown, \"s \");\n  }\n}\nfunction OtpVerificationComponent_span_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.isResending ? \"Sending...\" : \"Resend code\", \" \");\n  }\n}\nexport let OtpVerificationComponent = /*#__PURE__*/(() => {\n  class OtpVerificationComponent {\n    constructor(fb, route, router, authService, emailAuthService) {\n      this.fb = fb;\n      this.route = route;\n      this.router = router;\n      this.authService = authService;\n      this.emailAuthService = emailAuthService;\n      this.email = '';\n      this.action = 'signin';\n      this.isLoading = false;\n      this.isResending = false;\n      this.resendCooldown = 0;\n      this.otpForm = this.fb.group({\n        otp: ['', [Validators.required, Validators.pattern(/^\\d{6}$/)]]\n      });\n    }\n    ngOnInit() {\n      // Get email and action from query parameters\n      this.route.queryParams.subscribe(params => {\n        this.email = params['email'] || '';\n        this.action = params['action'] || 'signin';\n        if (!this.email) {\n          // Redirect back if no email provided\n          this.router.navigate([`/auth/${this.action}`]);\n        }\n      });\n      // Start resend cooldown\n      this.startResendCooldown();\n    }\n    ngOnDestroy() {\n      if (this.cooldownInterval) {\n        clearInterval(this.cooldownInterval);\n      }\n    }\n    // Handle OTP Input - Auto-format\n    onOtpInput(event) {\n      const value = event.target.value.replace(/\\D/g, ''); // Remove non-digits\n      this.otpForm.patchValue({\n        otp: value\n      });\n    }\n    // Verify OTP\n    handleOtpVerification() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        if (_this.otpForm.valid) {\n          _this.isLoading = true;\n          const otp = _this.otpForm.get('otp')?.value;\n          try {\n            const response = yield _this.emailAuthService.verifyOtp(_this.email, otp, _this.action);\n            if (response && response.success) {\n              // Success - user will be redirected by auth service\n              // The auth service handles setting the session and navigation\n            } else {\n              // Error - show error message (handled by service)\n              _this.otpForm.patchValue({\n                otp: ''\n              });\n            }\n          } catch (error) {\n            console.error('OTP verification error:', error);\n            _this.otpForm.patchValue({\n              otp: ''\n            });\n          } finally {\n            _this.isLoading = false;\n          }\n        }\n      })();\n    }\n    // Resend OTP\n    resendOtp() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        if (_this2.resendCooldown > 0) return;\n        _this2.isResending = true;\n        try {\n          const response = yield _this2.emailAuthService.resendOtp(_this2.email, _this2.action);\n          if (response.success) {\n            _this2.startResendCooldown();\n          }\n        } catch (error) {\n          console.error('Resend OTP error:', error);\n        } finally {\n          _this2.isResending = false;\n        }\n      })();\n    }\n    // Start resend cooldown timer\n    startResendCooldown() {\n      this.resendCooldown = 60; // 60 seconds\n      this.cooldownInterval = setInterval(() => {\n        this.resendCooldown--;\n        if (this.resendCooldown <= 0) {\n          clearInterval(this.cooldownInterval);\n          this.cooldownInterval = null;\n        }\n      }, 1000);\n    }\n    // Go back to previous page\n    goBack() {\n      this.router.navigate([`/auth/${this.action}`]);\n    }\n    static {\n      this.ɵfac = function OtpVerificationComponent_Factory(t) {\n        return new (t || OtpVerificationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.EmailAuthService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: OtpVerificationComponent,\n        selectors: [[\"app-otp-verification\"]],\n        decls: 33,\n        vars: 11,\n        consts: [[1, \"otp-container\"], [1, \"otp-card\"], [1, \"otp-header\"], [1, \"google-heading\"], [1, \"google-subtitle\"], [1, \"otp-content\"], [1, \"otp-form\", 3, \"ngSubmit\", \"formGroup\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"otp\", \"placeholder\", \"000000\", \"maxlength\", \"6\", 1, \"otp-input\", 3, \"input\"], [\"matSuffix\", \"\"], [4, \"ngIf\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 1, \"google-button\", \"full-width\", 3, \"disabled\"], [\"diameter\", \"20\", 4, \"ngIf\"], [1, \"resend-section\"], [1, \"resend-text\"], [\"mat-button\", \"\", 1, \"resend-button\", 3, \"click\", \"disabled\"], [1, \"back-section\"], [\"mat-button\", \"\", 1, \"back-button\", 3, \"click\"], [\"diameter\", \"20\"]],\n        template: function OtpVerificationComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n            i0.ɵɵtext(4, \"Verify your email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"p\", 4);\n            i0.ɵɵtext(6, \" We sent a 6-digit code to \");\n            i0.ɵɵelementStart(7, \"strong\");\n            i0.ɵɵtext(8);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(9, \"div\", 5)(10, \"form\", 6);\n            i0.ɵɵlistener(\"ngSubmit\", function OtpVerificationComponent_Template_form_ngSubmit_10_listener() {\n              return ctx.handleOtpVerification();\n            });\n            i0.ɵɵelementStart(11, \"mat-form-field\", 7)(12, \"mat-label\");\n            i0.ɵɵtext(13, \"Verification code\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"input\", 8);\n            i0.ɵɵlistener(\"input\", function OtpVerificationComponent_Template_input_input_14_listener($event) {\n              return ctx.onOtpInput($event);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"mat-icon\", 9);\n            i0.ɵɵtext(16, \"security\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(17, OtpVerificationComponent_mat_error_17_Template, 2, 0, \"mat-error\", 10)(18, OtpVerificationComponent_mat_error_18_Template, 2, 0, \"mat-error\", 10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"button\", 11);\n            i0.ɵɵtemplate(20, OtpVerificationComponent_mat_spinner_20_Template, 1, 0, \"mat-spinner\", 12)(21, OtpVerificationComponent_span_21_Template, 2, 1, \"span\", 10);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(22, \"div\", 13)(23, \"p\", 14);\n            i0.ɵɵtext(24, \"Didn't receive the code?\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(25, \"button\", 15);\n            i0.ɵɵlistener(\"click\", function OtpVerificationComponent_Template_button_click_25_listener() {\n              return ctx.resendOtp();\n            });\n            i0.ɵɵtemplate(26, OtpVerificationComponent_span_26_Template, 2, 1, \"span\", 10)(27, OtpVerificationComponent_span_27_Template, 2, 1, \"span\", 10);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(28, \"div\", 16)(29, \"button\", 17);\n            i0.ɵɵlistener(\"click\", function OtpVerificationComponent_Template_button_click_29_listener() {\n              return ctx.goBack();\n            });\n            i0.ɵɵelementStart(30, \"mat-icon\");\n            i0.ɵɵtext(31, \"arrow_back\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(32);\n            i0.ɵɵelementEnd()()()()();\n          }\n          if (rf & 2) {\n            let tmp_2_0;\n            let tmp_3_0;\n            i0.ɵɵadvance(8);\n            i0.ɵɵtextInterpolate(ctx.email);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"formGroup\", ctx.otpForm);\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.otpForm.get(\"otp\")) == null ? null : tmp_2_0.hasError(\"required\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.otpForm.get(\"otp\")) == null ? null : tmp_3_0.hasError(\"pattern\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", !ctx.otpForm.valid || ctx.isLoading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"disabled\", ctx.isResending || ctx.resendCooldown > 0);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.resendCooldown > 0);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.resendCooldown === 0);\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate1(\" Back to \", ctx.action === \"signup\" ? \"sign up\" : \"sign in\", \" \");\n          }\n        },\n        dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i6.MatButton, i7.MatInput, i8.MatFormField, i8.MatLabel, i8.MatError, i8.MatSuffix, i9.MatIcon, i10.MatProgressSpinner],\n        styles: [\".otp-container[_ngcontent-%COMP%]{min-height:100vh;display:flex;align-items:center;justify-content:center;background:linear-gradient(135deg,#667eea,#764ba2);padding:20px}.otp-card[_ngcontent-%COMP%]{background:#fff;border-radius:8px;box-shadow:0 2px 10px #0000001a;width:100%;max-width:400px;padding:40px}.otp-header[_ngcontent-%COMP%]{text-align:center;margin-bottom:32px}.otp-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:24px;font-weight:400;color:#202124;margin:0 0 8px}.otp-header[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:16px;color:#5f6368;margin:0}.otp-form[_ngcontent-%COMP%]{margin-bottom:32px}.full-width[_ngcontent-%COMP%]{width:100%}.otp-input[_ngcontent-%COMP%]{font-size:24px;text-align:center;letter-spacing:8px;font-family:Courier New,monospace}.google-button[_ngcontent-%COMP%]{background-color:#1a73e8;color:#fff;height:48px;font-family:Google Sans,sans-serif;font-size:14px;font-weight:500;text-transform:none;letter-spacing:.25px;margin-top:24px}.google-button[_ngcontent-%COMP%]:hover{background-color:#1557b0}.google-button[_ngcontent-%COMP%]:disabled{background-color:#dadce0;color:#5f6368}.resend-section[_ngcontent-%COMP%]{text-align:center;margin-bottom:24px}.resend-text[_ngcontent-%COMP%]{color:#5f6368;font-size:14px;margin:0 0 8px}.resend-button[_ngcontent-%COMP%]{color:#1a73e8;font-family:Google Sans,sans-serif;font-size:14px;font-weight:500;text-transform:none;letter-spacing:.25px}.resend-button[_ngcontent-%COMP%]:disabled{color:#5f6368}.back-section[_ngcontent-%COMP%]{text-align:center}.back-button[_ngcontent-%COMP%]{color:#5f6368;font-family:Google Sans,sans-serif;font-size:14px;text-transform:none;letter-spacing:.25px}.back-button[_ngcontent-%COMP%]:hover{color:#1a73e8;background-color:#1a73e80a}mat-spinner[_ngcontent-%COMP%]{margin-right:8px}@media (max-width: 480px){.otp-card[_ngcontent-%COMP%]{padding:24px;margin:16px}}\"]\n      });\n    }\n  }\n  return OtpVerificationComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}